//{ Driver Code Starts
// Initial template for C++

#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
//User function template in C++

class Solution 
{
    public:
    //Function to find minimum number of pages.
    bool PossibleSolution(int *arr,int n,int m,int mid){
         int sm=0;
         int c=1;
        for(int i=0;i<n;i++){
           
           if(arr[i]>mid)return 0;
           if(sm+arr[i]>mid){
               c++;
               if(c>m)return 0;
               else{
                   sm=arr[i];
               }
               
           }
           else{
               sm+=arr[i];
           }
        }
            return 1;
       
        
    }
    int findPages(int A[], int N, int M) 
    {
        if(M>N)return -1;
       int s=0;
       int e=accumulate(A,A+N,0);
       int mid=s+(e-s)/2;
       int ans=1;
       while(s<=e){
           if(PossibleSolution(A,N,M,mid)){
               e=mid-1;
               ans=mid;
           }
           else{
               s=mid+1;
           }
           mid=s+(e-s)/2;
       }
       return ans;
       
        
        
    }
};




//{ Driver Code Starts.

int main() {
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int A[n];
        for(int i=0;i<n;i++){
            cin>>A[i];
        }
        int m;
        cin>>m;
        Solution ob;
        cout << ob.findPages(A, n, m) << endl;
    }
    return 0;
}

// } Driver Code Ends
